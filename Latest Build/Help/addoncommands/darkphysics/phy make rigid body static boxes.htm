<html>
<head>
<title>PHY MAKE RIGID BODY STATIC BOXES</title>
</head>
<body background='gfx\dbpro_bg.jpg'>

<!-- Page Header -->
<table width='100%' border='0' cellpadding='0' cellspacing='0'>
<tr><td align='center'><img src='gfx\dbph_head_1.jpg' width='340' height='51'></td></tr>
</table>

<table width='100%' border='0' cellpadding='0' cellspacing='0'>
<tr><td>
<!-- Function Head -->
<font face="Verdana" size="5">
<b>
PHY MAKE RIGID BODY STATIC BOXES
</b>
<font face="Verdana" size="2">
<p>
Takes an object and makes a multi shape rigid body for it from all of its limbs using boxes.
</p>
</font>

<!-- Syntax -->
<table width='100%' cellpadding='2'>
<tr><td bgcolor='#0d4283'><font color='#ffffff' size='3'><b>&nbsp;
Syntax
</b></font></td></tr>
</table>
<font face="Verdana" size="2">
<pre>
phy make rigid body static boxes object number <BR>phy make rigid body static boxes object number, material  

</pre>
</font>

<!-- Parameters -->
<table width='100%' cellpadding='2'>
<tr><td bgcolor='#0d4283'><font color='#ffffff' size='3'><b>&nbsp;
Parameters
</b></font></td></tr>
</table>
<font face="Verdana" size="2">
<BR>
<pre>object number
</pre><blockquote> the identification number of the 3D object that you want to be represented by a collection of static boxes in the simulation  
<br><br></blockquote><pre>material
</pre><blockquote> this parameter is optional, a material can be specified if required upon creation, by specifying a material you can have further control over how the object will react with other objects in regard to properties such as its restitution  
<br><br></blockquote>
</font>

<!-- Returns -->
<table width='100%' cellpadding='2'>
<tr><td bgcolor='#0d4283'><font color='#ffffff' size='3'><b>&nbsp;
Returns
</b></font></td></tr>
</table>
<font face="Verdana" size="2">
<p>
This command does not return a value.
</p>
</font>

<!-- Description -->
<table width='100%' cellpadding='2'>
<tr><td bgcolor='#0d4283'><font color='#ffffff' size='3'><b>&nbsp;
Description
</b></font></td></tr>
</table>
<font face="Verdana" size="2"> 
<p>
 This is particularly useful in cases where more complex objects are required than the standard box, sphere and capsule.  As an example of this command in action, take a scenario where a table model has been loaded. If phy make rigid body static box is used then the box will be a fit around the whole table so other rigid bodies will not be able to go under the empty space below the table top and its legs. If we use phy make rigid body static boxes each part of the table can have a dynamic rigid body sphere to represent it in the simulation. Therefore we end up with five rigid body boxes, one for the table top and four for the legs. This is much more preferable and means other rigid bodies can move in the visible empty space below the table. <br><br>Note that this command operates on limbs / meshes in an object so this determines how the object is represented. Having only one limb / mesh in the object will result in only one rigid body box being created so it is important to ensure the model you are using is set up correctly so in the case of a table make sure each component is a separate limb / mesh within the model hierarchy.  As the object is represented by a collection of static rigid body boxes it will remain immoveable and will not be affected by forces such as gravity etc. This makes static objects ideal candidates for level scenery.  

</p>
</font>

<!-- Function Footer -->
</font>
</td></tr></table>
<br>

<!-- Page Footer -->
<table width='100%' border='0' cellpadding='0' cellspacing='0'>
<tr><td align='center'><img src='gfx\dbph_foot_1.jpg' width='340' height='38'></td></tr>
</table>
</body>
</html>

